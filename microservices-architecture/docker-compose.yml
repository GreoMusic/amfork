version: '3.8'

services:
  # Database
  mysql:
    image: mysql:8.0
    container_name: acadex-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: acadex_mini
      MYSQL_USER: acadex
      MYSQL_PASSWORD: acadex123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - acadex-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: acadex-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - acadex-network

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: acadex-auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=mysql://acadex:acadex123@mysql:3306/auth_db
      - JWT_SECRET=your-super-secret-jwt-key-here
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mysql
      - redis
    networks:
      - acadex-network
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules

  # Class Service
  class-service:
    build:
      context: ./services/class-service
      dockerfile: Dockerfile
    container_name: acadex-class-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=mysql://acadex:acadex123@mysql:3306/class_db
      - JWT_SECRET=your-super-secret-jwt-key-here
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mysql
      - redis
    networks:
      - acadex-network
    volumes:
      - ./services/class-service:/app
      - /app/node_modules

  # Assignment Service
  assignment-service:
    build:
      context: ./services/assignment-service
      dockerfile: Dockerfile
    container_name: acadex-assignment-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DATABASE_URL=mysql://acadex:acadex123@mysql:3306/assignment_db
      - JWT_SECRET=your-super-secret-jwt-key-here
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mysql
      - redis
    networks:
      - acadex-network
    volumes:
      - ./services/assignment-service:/app
      - /app/node_modules

  # Grading Service
  grading-service:
    build:
      context: ./services/grading-service
      dockerfile: Dockerfile
    container_name: acadex-grading-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=mysql://acadex:acadex123@mysql:3306/grading_db
      - JWT_SECRET=your-super-secret-jwt-key-here
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=your-openai-api-key
    depends_on:
      - mysql
      - redis
    networks:
      - acadex-network
    volumes:
      - ./services/grading-service:/app
      - /app/node_modules

  # File Service
  file-service:
    build:
      context: ./services/file-service
      dockerfile: Dockerfile
    container_name: acadex-file-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DATABASE_URL=mysql://acadex:acadex123@mysql:3306/file_db
      - JWT_SECRET=your-super-secret-jwt-key-here
      - REDIS_URL=redis://redis:6379
      - AWS_ACCESS_KEY_ID=your-aws-access-key
      - AWS_SECRET_ACCESS_KEY=your-aws-secret-key
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=acadex-files
    depends_on:
      - mysql
      - redis
    networks:
      - acadex-network
    volumes:
      - ./services/file-service:/app
      - /app/node_modules
      - file_storage:/app/uploads

  # Subscription Service
  subscription-service:
    build:
      context: ./services/subscription-service
      dockerfile: Dockerfile
    container_name: acadex-subscription-service
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - PORT=3006
      - DATABASE_URL=mysql://acadex:acadex123@mysql:3306/subscription_db
      - JWT_SECRET=your-super-secret-jwt-key-here
      - REDIS_URL=redis://redis:6379
      - STRIPE_SECRET_KEY=your-stripe-secret-key
      - STRIPE_WEBHOOK_SECRET=your-stripe-webhook-secret
    depends_on:
      - mysql
      - redis
    networks:
      - acadex-network
    volumes:
      - ./services/subscription-service:/app
      - /app/node_modules

  # Notification Service
  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: acadex-notification-service
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - PORT=3007
      - DATABASE_URL=mysql://acadex:acadex123@mysql:3306/notification_db
      - JWT_SECRET=your-super-secret-jwt-key-here
      - REDIS_URL=redis://redis:6379
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=your-email@gmail.com
      - SMTP_PASS=your-app-password
    depends_on:
      - mysql
      - redis
    networks:
      - acadex-network
    volumes:
      - ./services/notification-service:/app
      - /app/node_modules

  # Analytics Service
  analytics-service:
    build:
      context: ./services/analytics-service
      dockerfile: Dockerfile
    container_name: acadex-analytics-service
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=development
      - PORT=3008
      - DATABASE_URL=mysql://acadex:acadex123@mysql:3306/analytics_db
      - JWT_SECRET=your-super-secret-jwt-key-here
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mysql
      - redis
    networks:
      - acadex-network
    volumes:
      - ./services/analytics-service:/app
      - /app/node_modules

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: acadex-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=your-super-secret-jwt-key-here
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:3001
      - CLASS_SERVICE_URL=http://class-service:3002
      - ASSIGNMENT_SERVICE_URL=http://assignment-service:3003
      - GRADING_SERVICE_URL=http://grading-service:3004
      - FILE_SERVICE_URL=http://file-service:3005
      - SUBSCRIPTION_SERVICE_URL=http://subscription-service:3006
      - NOTIFICATION_SERVICE_URL=http://notification-service:3007
      - ANALYTICS_SERVICE_URL=http://analytics-service:3008
    depends_on:
      - auth-service
      - class-service
      - assignment-service
      - grading-service
      - file-service
      - subscription-service
      - notification-service
      - analytics-service
      - redis
    networks:
      - acadex-network
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: acadex-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
    networks:
      - acadex-network

volumes:
  mysql_data:
  redis_data:
  file_storage:

networks:
  acadex-network:
    driver: bridge 