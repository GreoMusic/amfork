{
  "name": "acadex-mini-microservices",
  "version": "1.0.0",
  "description": "Acadex Mini Microservices Architecture",
  "main": "index.js",
  "scripts": {
    "install:all": "npm run install:services && npm run install:shared",
    "install:services": "cd services/auth-service && npm install && cd ../class-service && npm install && cd ../assignment-service && npm install && cd ../grading-service && npm install && cd ../file-service && npm install && cd ../subscription-service && npm install && cd ../notification-service && npm install && cd ../analytics-service && npm install && cd ../api-gateway && npm install",
    "install:shared": "cd shared && npm install",
    "start:all": "concurrently \"npm run start:auth\" \"npm run start:class\" \"npm run start:assignment\" \"npm run start:grading\" \"npm run start:file\" \"npm run start:subscription\" \"npm run start:notification\" \"npm run start:analytics\" \"npm run start:gateway\"",
    "start:auth": "cd services/auth-service && npm start",
    "start:class": "cd services/class-service && npm start",
    "start:assignment": "cd services/assignment-service && npm start",
    "start:grading": "cd services/grading-service && npm start",
    "start:file": "cd services/file-service && npm start",
    "start:subscription": "cd services/subscription-service && npm start",
    "start:notification": "cd services/notification-service && npm start",
    "start:analytics": "cd services/analytics-service && npm start",
    "start:gateway": "cd services/api-gateway && npm start",
    "dev:all": "concurrently \"npm run dev:auth\" \"npm run dev:class\" \"npm run dev:assignment\" \"npm run dev:grading\" \"npm run dev:file\" \"npm run dev:subscription\" \"npm run dev:notification\" \"npm run dev:analytics\" \"npm run dev:gateway\"",
    "dev:auth": "cd services/auth-service && npm run dev",
    "dev:class": "cd services/class-service && npm run dev",
    "dev:assignment": "cd services/assignment-service && npm run dev",
    "dev:grading": "cd services/grading-service && npm run dev",
    "dev:file": "cd services/file-service && npm run dev",
    "dev:subscription": "cd services/subscription-service && npm run dev",
    "dev:notification": "cd services/notification-service && npm run dev",
    "dev:analytics": "cd services/analytics-service && npm run dev",
    "dev:gateway": "cd services/api-gateway && npm run dev",
    "db:setup": "npm run db:create && npm run db:migrate",
    "db:create": "mysql -u root -p -e \"CREATE DATABASE IF NOT EXISTS auth_db; CREATE DATABASE IF NOT EXISTS class_db; CREATE DATABASE IF NOT EXISTS assignment_db; CREATE DATABASE IF NOT EXISTS grading_db; CREATE DATABASE IF NOT EXISTS file_db; CREATE DATABASE IF NOT EXISTS subscription_db; CREATE DATABASE IF NOT EXISTS notification_db; CREATE DATABASE IF NOT EXISTS analytics_db;\"",
    "db:migrate": "npm run migrate:auth && npm run migrate:class && npm run migrate:assignment && npm run migrate:grading && npm run migrate:file && npm run migrate:subscription && npm run migrate:notification && npm run migrate:analytics",
    "migrate:auth": "cd services/auth-service && npx prisma migrate dev",
    "migrate:class": "cd services/class-service && npx prisma migrate dev",
    "migrate:assignment": "cd services/assignment-service && npx prisma migrate dev",
    "migrate:grading": "cd services/grading-service && npx prisma migrate dev",
    "migrate:file": "cd services/file-service && npx prisma migrate dev",
    "migrate:subscription": "cd services/subscription-service && npx prisma migrate dev",
    "migrate:notification": "cd services/notification-service && npx prisma migrate dev",
    "migrate:analytics": "cd services/analytics-service && npx prisma migrate dev",
    "test:all": "npm run test:auth && npm run test:class && npm run test:assignment && npm run test:grading && npm run test:file && npm run test:subscription && npm run test:notification && npm run test:analytics && npm run test:gateway",
    "test:auth": "cd services/auth-service && npm test",
    "test:class": "cd services/class-service && npm test",
    "test:assignment": "cd services/assignment-service && npm test",
    "test:grading": "cd services/grading-service && npm test",
    "test:file": "cd services/file-service && npm test",
    "test:subscription": "cd services/subscription-service && npm test",
    "test:notification": "cd services/notification-service && npm test",
    "test:analytics": "cd services/analytics-service && npm test",
    "test:gateway": "cd services/api-gateway && npm test",
    "test:integration": "jest --config jest.integration.config.js",
    "test:e2e": "jest --config jest.e2e.config.js",
    "deploy:all": "npm run deploy:auth && npm run deploy:class && npm run deploy:assignment && npm run deploy:grading && npm run deploy:file && npm run deploy:subscription && npm run deploy:notification && npm run deploy:analytics && npm run deploy:gateway",
    "deploy:auth": "cd services/auth-service && railway up",
    "deploy:class": "cd services/class-service && railway up",
    "deploy:assignment": "cd services/assignment-service && railway up",
    "deploy:grading": "cd services/grading-service && fly deploy",
    "deploy:file": "cd services/file-service && railway up",
    "deploy:subscription": "cd services/subscription-service && railway up",
    "deploy:notification": "cd services/notification-service && railway up",
    "deploy:analytics": "cd services/analytics-service && railway up",
    "deploy:gateway": "cd services/api-gateway && railway up",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "health:check": "npm run health:auth && npm run health:class && npm run health:assignment && npm run health:grading && npm run health:file && npm run health:subscription && npm run health:notification && npm run health:analytics && npm run health:gateway",
    "health:auth": "curl -f http://localhost:3001/health || echo 'Auth Service is down'",
    "health:class": "curl -f http://localhost:3002/health || echo 'Class Service is down'",
    "health:assignment": "curl -f http://localhost:3003/health || echo 'Assignment Service is down'",
    "health:grading": "curl -f http://localhost:3004/health || echo 'Grading Service is down'",
    "health:file": "curl -f http://localhost:3005/health || echo 'File Service is down'",
    "health:subscription": "curl -f http://localhost:3006/health || echo 'Subscription Service is down'",
    "health:notification": "curl -f http://localhost:3007/health || echo 'Notification Service is down'",
    "health:analytics": "curl -f http://localhost:3008/health || echo 'Analytics Service is down'",
    "health:gateway": "curl -f http://localhost:3000/health || echo 'API Gateway is down'",
    "logs:all": "npm run logs:auth & npm run logs:class & npm run logs:assignment & npm run logs:grading & npm run logs:file & npm run logs:subscription & npm run logs:notification & npm run logs:analytics & npm run logs:gateway",
    "logs:auth": "cd services/auth-service && tail -f logs/combined.log",
    "logs:class": "cd services/class-service && tail -f logs/combined.log",
    "logs:assignment": "cd services/assignment-service && tail -f logs/combined.log",
    "logs:grading": "cd services/grading-service && tail -f logs/combined.log",
    "logs:file": "cd services/file-service && tail -f logs/combined.log",
    "logs:subscription": "cd services/subscription-service && tail -f logs/combined.log",
    "logs:notification": "cd services/notification-service && tail -f logs/combined.log",
    "logs:analytics": "cd services/analytics-service && tail -f logs/combined.log",
    "logs:gateway": "cd services/api-gateway && tail -f logs/combined.log"
  },
  "keywords": [
    "microservices",
    "nodejs",
    "express",
    "prisma",
    "mysql",
    "jwt",
    "railway",
    "acadex",
    "education"
  ],
  "author": "Acadex Team",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2",
    "jest": "^29.7.0",
    "supertest": "^6.3.3"
  },
  "dependencies": {
    "dotenv": "^16.3.1"
  }
} 